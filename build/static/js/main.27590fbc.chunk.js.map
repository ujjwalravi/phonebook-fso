{"version":3,"sources":["services/personService.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","service","getAll","axios","get","create","newObject","post","update","id","put","deleteA","delete","Notification","notification","errorMessage","style","color","background","fontSize","borderStyle","borderRadius","marginBottom","PersonForm","onSubmit","name","number","value","onChange","type","Filter","Details","delte","onClick","App","useState","persons","setPersons","newName","setNewName","newNum","setNewNum","search","setSearch","setNotification","setErrorMessage","useEffect","personService","then","response","data","catch","error","toShow","filter","person","toLowerCase","includes","event","target","preventDefault","map","avl_details","find","window","confirm","changedData","setTimeout","err","valObject","concat","console","log","record","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27590fbc.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n  }\r\n  \r\n  const create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n  }\r\n  \r\n  const update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject)\r\n  }\r\n\r\n  const deleteA = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n  }\r\n  \r\n  const service = {getAll, create, update, deleteA}\r\n  export default service","import React from 'react'\r\n\r\nconst Notification = ({notification, errorMessage}) => {\r\n\r\n    const notificationStyle = {\r\n        color: 'green',\r\n  background: 'lightgrey',\r\n  fontSize: 20,\r\n  borderStyle: 'solid',\r\n  borderRadius: 5,\r\n  marginBottom: 10\r\n      }\r\n      if (!notification && !errorMessage) {\r\n        return null;\r\n      }\r\n    return (\r\n        <p style={notificationStyle}>\r\n            {notification ? notification : errorMessage}\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personService from './services/personService'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNum, setNewNum ] = useState('')\n  const [ search, setSearch ] = useState('')\n  const [ notification, setNotification] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService.getAll()\n    .then(response => setPersons(response.data))\n    .catch(error => {\n      setErrorMessage(error.response.data.error)\n    })\n  },[])\n\n  const addVal = (event) => {\n    event.preventDefault()\n    const avl_names = persons.map(person => person.name)\n    if (avl_names.includes(newName)) {\n      const avl_details = persons.find(person => person.name === newName)\n      const res = window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`)\n      if (res===true) {\n        const changedData = {...avl_details, number: newNum}\n        personService.update(avl_details.id, changedData)\n        .then((response) => {setPersons(persons.map(person => person.id !== avl_details.id ? person : response.data))\n        setNewNum('')\n        setNewName('')\n        setNotification(`Added ${avl_details.name}`)\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n      })\n        .catch((err) => {\n          if (err.response.data) {\n            setErrorMessage(err.response.data.error)\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n          } else {\n            setErrorMessage(\n              `Information of ${avl_details.name} has already been removed from server`\n            )\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n          }\n        })\n      }\n      return\n    }\n    const valObject = {\n      name: newName,\n      number: newNum\n    }\n    \n    personService.create(valObject)\n    .then(response => {\n      setPersons(persons.concat(response.data))\n      setNewNum('')\n      setNewName('')\n      setNotification(`Added ${response.data.name}`)\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n    })\n    .catch(error => {\n      // this is the way to access the error message\n      console.log('here1')\n      setErrorMessage(error.response.data.error)\n    })  \n  }\n\n  const deleteRecord = (record) => {\n    if (window.confirm(`Delete ${record.name}`)) {\n      personService.deleteA(record.id).then(() => setPersons(persons.filter(person => person.id !== record.id)))\n    }\n    \n  }\n\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumChange = (event) => {\n    setNewNum(event.target.value)\n  }\n\n  const handleSearch = (event) => {\n    setSearch(event.target.value)\n  }\n\n  const toShow = search === '' ? persons : persons.filter(person => person.name.toLowerCase().includes(search.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} errorMessage={errorMessage} />\n      <Filter value={search} onChange={handleSearch} />\n      <h3>Add a new</h3>\n      <PersonForm onSubmit={addVal} name={{value: newName, onChange: handleNameChange}} number={{value: newNum, onChange: handleNumChange}} />\n      <h2>Numbers</h2>\n      <ul>\n        {toShow.map(person =>\n        <Details key={person.id} name={person.name} number={person.number} delte = {() => deleteRecord(person)}/>\n        )}\n      </ul>\n    </div>\n  )\n}\n\nconst PersonForm = ({onSubmit, name, number}) => {\n  return (\n    <form onSubmit = {onSubmit}>\n        <div>\n          name: <input value={name.value} onChange = {name.onChange}/>\n        </div>\n        <div>\n          number: <input value={number.value} onChange={number.onChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n    </form>\n  )\n}\n\nconst Filter = ({value, onChange}) => {\n  return (\n    <div>\n        filter shown with: <input value={value} onChange = {onChange}/>\n    </div>\n  )\n}\n\nconst Details = ({name, number, delte}) => {\n  return (\n    <li>{name} {number} <button onClick={delte}>delete</button></li>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}